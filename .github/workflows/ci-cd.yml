name: CI/CD Pipeline for Parcel Tracker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # Job 1: Тестирование и проверка кода
  test:
    name: Run Lints and Tests
    runs-on: ubuntu-latest

    services:
      # Запускаем легковесную SQLite в Docker, эмулируя среду для тестов
      sqlite:
        image: nouchka/sqlite3:latest
        options: >-
          --health-cmd="sqlite3 --version"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Run Go Vet
      run: go vet ./...

    - name: Run Tests
      run: go test -v -timeout 30s ./...
      # Таймаут помогает "убить" зависшие тесты

  # Job 2: Сборка и публикация в Docker Hub
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    # Этот job запустится только если:
    # 1. Прошел предыдущий job "test"
    # 2. Событие - это push в main ветку с тегом (например, v1.0.0)
    needs: test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: <postkserks>/parcel-tracker
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}